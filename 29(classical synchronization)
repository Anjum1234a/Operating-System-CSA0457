#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>

sem_t mutex;  
void *process(void *arg) {
    int id = *(int *)arg;
    sem_wait(&mutex);  
    printf("Process %d entering critical section.\n", id);
    sleep(1);
    printf("Process %d leaving critical section.\n", id);
    sem_post(&mutex);  
    return NULL;
}
int main() {
    pthread_t threads[3];
    int process_ids[5] = {1, 2, 3};
    sem_init(&mutex, 0, 1); 
    for (int i = 0; i < 3; i++) {
        pthread_create(&threads[i], NULL, process, &process_ids[i]);
    }
    for (int i = 0; i < 3; i++) {
        pthread_join(threads[i], NULL);
    }

    sem_destroy(&mutex);  
    return 0;
}
